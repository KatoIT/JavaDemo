package Sort_Algorithm.My_Application;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;

import Sort_Algorithm.MaxPQ;
import Sort_Algorithm.MinPQ;

public class List_Student {

	private MaxPQ<Student> pq;
	private static int key = -1;

	public List_Student() {
		pq = new MaxPQ<Student>((s1, s2)
				-> {
			String val1 = null;
			String val2 = null;
			Double var1 = 0.0;
			Double var2 = 0.0;
			switch (key) {
			case 1:
				val1 = s1.getLastName(); // sort by LastName
				val2 = s2.getLastName();
				return val1.compareTo(val2);
			case 2:
				val1 = s1.getfirstName(); // sort by firstName
				val2 = s2.getfirstName();
				return val1.compareTo(val2);
			case 3:
				val1 = s1.getId(); // sort by ID
				val2 = s2.getId();
				return val1.compareTo(val2);
			case 4:
				var1 = s1.getMath(); // sort by score Math
				var2 = s2.getMath();
				return var1.compareTo(var2);
			case 5:
				var1 = s1.getChemiscal(); // sort by score Chemiscal
				var2 = s2.getChemiscal();
				return var1.compareTo(var2);
			case 6:
				var1 = s1.getPhysics(); // sort by score Physics
				var2 = s2.getPhysics();
				return var1.compareTo(var2);
			case 7:
				var1 = s1.getMath() + s1.getPhysics() + s1.getChemiscal(); // sort by score TB
				var2 = s2.getMath() + s2.getPhysics() + s2.getChemiscal();
				return var1.compareTo(var2);
			default:
				val1 = s1.getLastName(); // sort by LastName
				val2 = s2.getLastName();
				return val1.compareTo(val2);

			}

		});
	}

	public void add_Student(Student s) {
		pq.insert(s);
	}

	public void print_List() {
		pq.forEach(System.out::println);
	}

	public static void main(String args[]) {

		List_Student list = new List_Student();
		FileReader fr = null;
		BufferedReader br = null;
		try {
			fr = new FileReader(new File("student.txt"));
			br = new BufferedReader(fr);

			String line = br.readLine();
			while (line != null) {
				String[] str = line.split("-");

				list.add_Student(new Student(str[0], str[1], str[2], Double.parseDouble(str[3]),
						Double.parseDouble(str[4]), Double.parseDouble(str[5])));
				line = br.readLine();
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				br.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			try {
				fr.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		Scanner scanner = new Scanner(System.in);
		while (key != 0) {
			System.out.println("Chọn chức năng: " + "\n[1] - Sort by Name" + "\n[2] - Sort by SurName"
					+ "\n[3] - Sort by ID" + "\n[4] - Sort by score Math" + "\n[5] - Sort by score Chemiscal"
					+ "\n[6] - Sort by score Physical" + "\n[7] - Sort by score Sum" + "\n[0] - Exit");
			key = scanner.nextInt();
			if (key != 0) {
				System.out.println("ID\t\tName\t\t\t T\t L\t H");
				list.print_List();
			}else {
				System.out.println("------GoodBye!------");
			}
			
		}

		scanner.close();

	}
}
